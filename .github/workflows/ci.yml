on: [push]


name: CI

env:
  DATABASE_URL: sqlite://sqlite.db
  TEST_TAG: ultra-sound-api:test

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Set up database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.2.0 sqlx-cli --no-default-features --features postgres
          sqlx database create
          sqlx migrate run

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Set up database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.2.0 sqlx-cli --no-default-features --features postgres
          sqlx database create
          sqlx migrate run


      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test


  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Set up database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.2.0 sqlx-cli --no-default-features --features postgres
          sqlx database create
          sqlx migrate run


      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
